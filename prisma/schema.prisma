generator client {
  provider = "prisma-client-js"
  output   = "app"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id_user    String     @id @default(uuid()) @db.Char(36)
  username   String     @unique @db.VarChar(50)
  name       String     @db.VarChar(100)
  email      String     @unique @db.VarChar(100)
  password   String?    @db.Char(60)
  role       UserRole   @default(UNKNOWN)
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0)
  sessions   sessions[]

  @@index([email])
  @@index([username])
}

model feedback {
  id_feedback String   @id @default(uuid()) @db.Char(36)
  full_name   String
  email       String   @unique @db.VarChar(100)
  phone       String   @db.VarChar(20)
  message     String   @db.LongText
  created_at  DateTime @default(now()) @db.Timestamp(0)

  @@index([email])
}

model careers {
  id_career     String            @id @default(uuid()) @db.Char(36)
  title         String            @db.VarChar(255)
  department    CareerDepartment
  description   String            @db.LongText
  requirements  String?           @db.LongText
  status        CareerStatus
  type          CareerType
  min_salary    Int?
  max_salary    Int?
  location      CareerLocation
  deadline      DateTime
  deleted       Boolean           @default(false)
  created_at    DateTime          @default(now()) @db.Timestamp(0)
  updated_at    DateTime          @default(now()) @db.Timestamp(0)

  @@index([status])
  @@index([type])
  @@index([location])
}

model sessions {
  id_session String    @id @default(uuid()) @db.Char(36)
  id_user    String    @db.Char(36)
  token      String    @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  expires_at DateTime? @db.Timestamp(0)
  user       users     @relation(fields: [id_user], references: [id_user])

  @@index([id_user])
}

enum CareerDepartment {
  AGRICULTURE
  DESIGN
  EDUCATION
  FINANCE
  MARKETING
  OPERATIONS
  RESEARCH
  SUPPORT
  TECHNOLOGY
}

enum CareerLocation {
  ONSITE        @map("ON-SITE")
  HYBRID
  REMOTE
}

enum CareerStatus {
  OPEN
  CLOSE
}

enum CareerType {
  FULL_TIME     @map("FULL TIME")
  PART_TIME     @map("PART TIME")
  INTERNSHIP
}

enum UserRole {
  ADMIN
  BANK
  CUSTOMER
  FARMER
  UNKNOWN
}